1
00:00:08,000 --> 00:00:16,200
大家好，我是來優麒麟 (Ubuntu Kylin)社區的陳 Burgress，今天我給大家帶來的主題分享是如何推進中國少數民族語言

2
00:00:16,200 --> 00:00:28,091
在 Ubuntu 上的本地化工作，首先的話是一個簡單自我介紹，我叫陳 Burgress 我是來自於優麒麟社區和 KDE Network China

3
00:00:28,091 --> 00:00:37,900
我平時非常的喜歡和關注 FOSS 我是一名 Ubuntu Fedora 和 Arch 的用戶

4
00:00:37,900 --> 00:00:44,922
我使用 Linux 的原因是因為我需要使用它們進行開發工作和打包工作

5
00:00:44,922 --> 00:00:52,237
我平常使用 C/ C++/ Python/ Rust/ Lisp 進行我的編程開發工作

6
00:00:55,077 --> 00:01:00,882
這個 demo 的環境是使用 ArchLinux 和 Emacs

7
00:01:00,882 --> 00:01:04,672
然後你可以透過這兩個 email 聯繫我

8
00:01:06,500 --> 00:01:15,235
在主題分享的一開始，我希望能夠簡單的介紹一下中國的少數民族狀況

9
00:01:15,235 --> 00:01:20,997
中國的話是有著五十六個民族，然後其中的五十五個是少數民族群體

10
00:01:20,997 --> 00:01:25,209
他們其中五十三個都有著自己的語言和文字系統

11
00:01:25,209 --> 00:01:33,125
推進促進他們各自的語言的在ubuntu 上的一個穩定化可以有助於保護中國少數民族的文化和歷史傳承

12
00:01:33,631 --> 00:01:38,572
這也是我們項目一開始關注的核心點

13
00:01:40,119 --> 00:01:45,569
這裡的話，據我個人的了解

14
00:01:45,569 --> 00:01:55,175
我認為所有的操作系統上面多語言的支持是一個核心關注的要素

15
00:01:55,175 --> 00:02:04,056
在對於中國的少數民族語言，比如說像windows、macOS、安卓、ios

16
00:02:04,056 --> 00:02:07,150
他們都是一個有著一個不同程度的支持

17
00:02:07,841 --> 00:02:18,188
據我個人了解，在中國的新疆省市，少數民族是偏向於使用於 macOS 和 ios

18
00:02:18,188 --> 00:02:24,734
因為 macOS 和 ios 具有一個較好的維吾爾語的一個支持

19
00:02:24,734 --> 00:02:30,569
然後在中國的內蒙古省的話，可能大家就偏向於使用windows

20
00:02:30,569 --> 00:02:35,719
因為 windows 的內蒙古文支持是相對來說較好的

21
00:02:37,941 --> 00:02:49,576
然後相對於來說，Linux 上面的中國少數民族多語言支持是比較弱的部分

22
00:02:49,959 --> 00:02:57,964
啊比如說像蠻語、內蒙古語、還有藏語

23
00:02:57,964 --> 00:03:02,950
在 Linux 上面，都是一個非常殘缺的一個支持現況

24
00:03:02,950 --> 00:03:10,476
這也是我們項目的一個立足的一個現況吧

25
00:03:10,476 --> 00:03:19,500
我們的工作是在2020 年初開始的，主要的話是對中國藏語在優麒麟上添加一個實驗性的支持

26
00:03:19,500 --> 00:03:23,761
因為優麒麟是 Ubuntu 的一個官方子發行版本

27
00:03:23,761 --> 00:03:28,678
所以這些工作也同樣適用於 Ubuntu

28
00:03:29,400 --> 00:03:32,080
然後關於我們的本地化工作

29
00:03:32,080 --> 00:03:37,847
首先十分感謝西藏大學信息科學技術學院的尼瑪扎希教授、仁增多杰教授

30
00:03:37,847 --> 00:03:43,784
索南尖措教授和加央甲、三排才讓等學生的幫助和支持

31
00:03:46,000 --> 00:03:53,674
接下來，我想向大家介紹關於中國藏語的 Ubuntu 本地化工作的一個現況

32
00:03:53,674 --> 00:04:00,000
目前中國藏語的本地化在 Ubuntu 跟優麒麟上的支持度是比較有限的

33
00:04:00,000 --> 00:04:03,778
然後這裡的話我編寫了一份支持的列表

34
00:04:03,778 --> 00:04:11,337
首先的話，關於支持的發行版是有 Ubuntu 跟優麒麟

35
00:04:11,337 --> 00:04:13,384
然後覆蓋的.....

36
00:04:14,700 --> 00:04:18,994
覆蓋的版本的話，包括 Ubuntu 的16.04 跟20.04

37
00:04:18,994 --> 00:04:22,562
還有就是優麒麟的16.04 、18.04 、20.04

38
00:04:22,562 --> 00:04:31,925
這裡可以看到，我們的語言支持都是在長期支持版本上進行完成的

39
00:04:34,200 --> 00:04:35,728
然後接下來的話

40
00:04:35,728 --> 00:04:40,647
我想向大家介紹，我們的翻譯數據的一個情況

41
00:04:40,647 --> 00:04:45,762
因為操作系統的本地化工作是一個非常巨大的工作

42
00:04:45,762 --> 00:04:52,467
在過去的實踐中我們的翻譯覆蓋量目前是在 40% 以上

43
00:04:52,467 --> 00:04:56,956
然後就我們自己的統計是在 Ubuntu 跟優麒麟上

44
00:04:56,956 --> 00:05:05,907
所有的翻譯數據總共是有分別是有14萬 (接近15萬條) 跟17萬2千語條

45
00:05:05,907 --> 00:05:12,184
這裡的翻譯數據的話，主要是來自於中文語言包的一個翻譯數據量

46
00:05:12,184 --> 00:05:19,837
這裡我們對到的中文語言包是 language-pack-zh 和 language-pack-zh-base

47
00:05:21,400 --> 00:05:32,900
然後我們完成的翻譯大概是，在 16.04 上是 61000 語條，在 20.04 上是接近 56000 條

48
00:05:32,900 --> 00:05:40,584
然後接下來的話，我想介紹一下我們提供的一個語言包支持

49
00:05:40,584 --> 00:05:50,300
我們提供了一系列的語言包，包括了像 kylin-languange-pack-bo-cn 跟 kylin-languange-pack-bo-cn-base 還有一個擴展的語言包

50
00:05:52,100 --> 00:06:01,816
這裡的話， kylin-languange-pack-bo-cn 是一個攜包，主要是幫助 apt 去計算相關語言包的一個依賴

51
00:06:01,816 --> 00:06:08,800
就是說我們只需要安裝這一個包，他就會自動去拉取一個 base 包跟一個擴展包

52
00:06:08,800 --> 00:06:10,800
還有一些其他的語言設置包

53
00:06:10,800 --> 00:06:16,785
還有，同樣也包括我們使用的一個字體支持

54
00:06:19,200 --> 00:06:23,361
這裡的話 kylin-languange-pack-bo-cn 的話

55
00:06:23,361 --> 00:06:32,057
base包的話主要是存儲所有使用 gettext 翻譯文件格式的應用的一個翻譯文件

56
00:06:32,057 --> 00:06:34,989
比如說像 po 跟 mo 文件

57
00:06:34,989 --> 00:06:43,511
然後擴展包的話主要是對使用 qt 多語言支持文件格式的應用

58
00:06:43,511 --> 00:06:48,515
去提供翻譯的擴展支持，比如說像 ts 跟 qm 文件

59
00:06:49,800 --> 00:07:01,493
然後這裡的話，我們也有也可以查看一下我們的語言包支持的一個 control 文件

60
00:07:01,493 --> 00:07:08,588
然後他的話實際上是由一份原文包編譯出來這些包

61
00:07:08,588 --> 00:07:16,470
然後的話，這裡的話，我們也是可以看一下整個構建的一個過程

62
00:07:16,470 --> 00:07:21,092
構建的話主要是針對 po 跟 mo 進行一個分別的構建

63
00:07:21,092 --> 00:07:25,700
然後他的支持，這些是相對來說比較複雜的

64
00:07:31,300 --> 00:07:37,131
接下來的話，我對我們過去兩年中的一個開發模式進行一個簡單介紹

65
00:07:37,131 --> 00:07:43,798
總體上來看我們的開發模式是跨越了多種數據存儲的方式

66
00:07:43,798 --> 00:07:52,503
然後這裡的話我們所有的翻譯數據正如之前所提到的是來自於中文語言包

67
00:07:52,503 --> 00:07:58,121
然後我們透過中文語言包來構建一系列空的藏語翻譯文件

68
00:08:00,000 --> 00:08:07,648
然後我們將這兩部分的數據都導入到我們在 github 上託管的 git 倉庫去

69
00:08:07,648 --> 00:08:13,544
然後通過這個 git 倉庫，再來導出一個中文跟藏語的對照的數據表

70
00:08:13,544 --> 00:08:21,250
這部分的這個數據表的話是在一開始去進行構建的，也就是我待會會講的 stage 0 的工作

71
00:08:21,250 --> 00:08:24,892
 我們在導出這個對照表之後

72
00:08:25,679 --> 00:08:34,700
然後由我們的翻譯人員再對這部分的對照表，再進行一個翻譯

73
00:08:34,700 --> 00:08:41,850
然後得到一個翻譯過的對照表，然後我們再加上同步導入到我們的 git 倉庫中去

74
00:08:43,144 --> 00:08:48,600
然後我們同樣還依據這個 git 倉庫來構建了一個翻譯數據庫

75
00:08:48,600 --> 00:08:51,236
這個翻譯數據庫的話，是在本地的

76
00:08:51,236 --> 00:08:59,930
然後這個翻譯數據庫，主要是為了提供一個翻譯這個自匹配

77
00:08:59,930 --> 00:09:05,042
這個自匹配，我們待會在 stage 1 裡面去進行一個簡單的介紹

78
00:09:05,042 --> 00:09:11,259
同樣的這個 git 倉庫跟我們的 Weblate 平台是提供了一個雙向的同步支持

79
00:09:11,259 --> 00:09:17,337
Weblate 平台主要是提供翻譯的前端介面編譯支持

80
00:09:18,531 --> 00:09:20,205
然後我們會....

81
00:09:20,205 --> 00:09:29,833
然後我們的 git 倉庫可以生成出我們的藏語的語言包，就是我們之前剛剛提到的三個語言包

82
00:09:29,833 --> 00:09:33,252
這部分的工作也是可以進行自動構建的

83
00:09:35,642 --> 00:09:43,866
關於 stage 0 的話，這個實際上是我們在藏語本地化工作的早期階段的狀況的描述

84
00:09:45,710 --> 00:09:52,043
儘管在 2020年代，就是 ubuntu 相對來說是一個比較流行的發行版本

85
00:09:52,043 --> 00:10:00,103
但是他的一個開發流程，對於剛剛開始參與貢獻的大學教授跟學生來說，是具有一定的門檻的

86
00:10:00,103 --> 00:10:05,051
所以在起初的話我們並沒有使用 ubuntu 的那些開發平台

87
00:10:05,051 --> 00:10:12,346
像 launchpad 啊，還有他的一些 patch 跟 dpkg 的一些工具

88
00:10:12,346 --> 00:10:18,622
在一開始，我是將系統範圍內的所有的翻譯文件都導出成了中文跟英文對照的 excel 表格

89
00:10:18,622 --> 00:10:21,551
就是我們剛剛提到的對照表

90
00:10:21,551 --> 00:10:26,612
然後這個表格主要是用來便於不熟悉 ubuntu 開發工具的人員

91
00:10:26,612 --> 00:10:30,457
能夠盡可能簡單的參與到翻譯貢獻中去

92
00:10:32,285 --> 00:10:40,258
然後我們沒有使用 launchpad 進行翻譯工作的一個主要原因是，他沒有一個較好的中文介面支持

93
00:10:40,258 --> 00:10:43,936
而且它的交互操作存在一定的反復性

94
00:10:43,936 --> 00:10:47,378
然後在那個時候我們還沒有部署自己的 Weblate 服務

95
00:10:47,378 --> 00:10:55,596
所以的話我們使用了 git 倉庫，然後再導出 excel 表的方式來管理我們的翻譯數據

96
00:10:55,596 --> 00:10:59,245
這樣子管理的翻譯數據大概是有 30000 條左右

97
00:10:59,245 --> 00:11:04,182
我們的倉庫是位於 github，是託管在 github 上面

98
00:11:04,182 --> 00:11:14,294
然後你們，感興趣的朋友可以在我們的 github 倉庫中查看我們的一個進行的狀況

99
00:11:14,294 --> 00:11:19,550
這裡的話是我們兩個，一個是 16.04 翻譯文件的託管

100
00:11:19,550 --> 00:11:25,993
一個是 20.04 翻譯文件的託管狀態

101
00:11:29,493 --> 00:11:36,530
然後在第二階段的話，我們部署了自託管的一個 Weblate 服務

102
00:11:36,530 --> 00:11:42,197
是為了更好的同步 git 倉庫的一個在線翻譯服務的數據庫

103
00:11:42,197 --> 00:11:46,510
在這個階段的話我們構建了一個本地的翻譯數據庫

104
00:11:46,510 --> 00:11:49,590
主要是為了便於存儲所有已經翻譯的詞條

105
00:11:49,590 --> 00:11:52,165
然後在這些翻譯的基礎上面

106
00:11:52,165 --> 00:11:55,309
利用像 Levenshtein 距離這些方法

107
00:11:55,309 --> 00:11:59,673
對一個近似的翻譯，根據編譯距離去做一個模糊匹配

108
00:11:59,673 --> 00:12:06,986
然後這樣子我們大概擴充了一萬條左右的翻譯，當然這部分翻譯還是需要人工進行再次的符合

109
00:12:08,167 --> 00:12:14,292
然後這裡的話，我本地是有一個翻譯數據庫的一個副本

110
00:12:14,292 --> 00:12:20,180
這裡的話可以看到是總共是 172369 條數據

111
00:12:20,180 --> 00:12:26,018
然後其中藏語的翻譯數據量的話，是大概在40%以上吧

112
00:12:27,508 --> 00:12:35,139
他這是一個非常巨大的表，可以看到其中在藏語的翻譯情況

113
00:12:39,100 --> 00:12:42,964
然後我們剛剛說到的模糊匹配的話

114
00:12:42,964 --> 00:12:46,813
是一個基於 Levenshtein 距離的一個改進方法

115
00:12:46,813 --> 00:12:50,729
然後他是有別於就是字符串編譯距離比較的

116
00:12:50,729 --> 00:12:55,427
我自己將它稱為是基於藏語音節的編譯距離比較

117
00:12:55,427 --> 00:13:01,857
然後這裡的話一個藏語音節是包含了基字、原音、上加字、下加字、前加字、後加字、和再後加字

118
00:13:01,857 --> 00:13:10,399
這裡的每個組成部分都是一個字符，然後一個音節的話，就是最多是由七個字符來組成

119
00:13:10,399 --> 00:13:13,231
最少的話也是有三到四個字符的

120
00:13:13,231 --> 00:13:19,087
然後通過變更一個基於字符的方式到基於音節的方式

121
00:13:19,087 --> 00:13:26,177
我們可以過濾掉一些和音節無關的編譯操作的干擾

122
00:13:33,366 --> 00:13:41,343
然後，我這裡的藏語音節的一個解析支持的話

123
00:13:41,343 --> 00:13:48,219
也是再次感謝西藏大學的尼瑪扎希教授提供的一個理論支持

124
00:13:48,219 --> 00:13:58,960
我們這裡的藏語音節的編譯方法，是來自於他的藏語排序的理論方法

125
00:14:01,941 --> 00:14:12,287
通過他的方法實現一系列的狀態機群組，然後對這些東西來進行簡單的解析

126
00:14:15,200 --> 00:14:21,353
然後第三個階段的話，我們就開始使用了 Weblate 平台進行一個開源的協同翻譯

127
00:14:21,353 --> 00:14:25,698
然後同時構建、迭代構建我們自己的一個語言包

128
00:14:25,698 --> 00:14:33,164
儘管說我們這裡說到是使用了開源協同的一個模式

129
00:14:33,164 --> 00:14:38,708
但是我們的協同開發並不是分佈在全球的

130
00:14:38,708 --> 00:14:43,397
儘管並不是分佈在全球，但是也是跨越了幾千公裡

131
00:14:43,397 --> 00:14:47,066
然後把我們團隊中的每個成員連接起來

132
00:14:47,066 --> 00:14:51,761
然後你可以在這個網址去訪問我們的 Weblate 服務

133
00:14:51,761 --> 00:14:58,097
這裡的話可以看到藏語的翻譯比例是在 41%

134
00:14:58,097 --> 00:15:00,821
然後沒有翻譯的詞條是接近 88000 條

135
00:15:00,821 --> 00:15:04,798
然後所有的組件的話，大概是有 500 多個組件

136
00:15:04,798 --> 00:15:11,678
500 多個組件的話，是覆蓋了系統中的大多數應用、大多數關鍵性組件的

137
00:15:11,678 --> 00:15:20,146
比如像 fcitx 啊，還有一些 gnome 的軟件

138
00:15:23,000 --> 00:15:30,339
然後我在我的本地安裝了一個集成了藏語言包的優麒麟系統

139
00:15:30,339 --> 00:15:32,696
然後他是通過 QEMU 來安裝的

140
00:15:32,696 --> 00:15:41,502
然後接下來的話，讓我們去裡面簡單的看一看 

141
00:15:47,612 --> 00:15:54,300
這裡的話就是，優麒麟 20.04 的一個安裝好的系統

142
00:15:54,300 --> 00:16:01,271
然後實際上我們對大部分應用，就是主要是像 UQUI的應用還有一些 GTK 的應用

143
00:16:01,271 --> 00:16:04,766
進行了一個翻譯的覆蓋支持

144
00:16:04,766 --> 00:16:16,137
這裡的話我們可以通過 UQUI 的控制面板，去對整個系統的一個語言狀況進行一個切換

145
00:16:16,137 --> 00:16:21,813
像這裡的話都是提供了大量的藏語的語言的支持

146
00:16:21,813 --> 00:16:27,300
這裡的話，我們將藏語設置為了，在這個環境中將藏語設置為了第一支持的語言

147
00:16:27,891 --> 00:16:32,210
然後第二支持語言是漢語，其次是英語

148
00:16:36,200 --> 00:16:39,246
然後說到 UQUI 的控制面板

149
00:16:39,246 --> 00:16:43,466
控制面板的大部分翻譯是已經接近完成的

150
00:16:43,466 --> 00:16:48,100
儘管還有一些殘留的，沒有支持的部分

151
00:16:48,100 --> 00:16:56,457
但是相對來說，可用性已經是具備了一定的設置接口的翻譯完全覆蓋

152
00:16:56,457 --> 00:17:05,647
然後像一些傳統的 GTK 應用，比如說像 terminal 也是有了一個完整的藏語支持

153
00:17:05,647 --> 00:17:09,679
然後這裡的我們打開了終端就可以簡單的介紹一下

154
00:17:09,679 --> 00:17:13,748
像一些 CLI 程序的藏語翻譯支持

155
00:17:13,748 --> 00:17:21,796
比如說像常用的 sudo 也是有一個密碼提示上的藏語本地化支持

156
00:17:21,796 --> 00:17:29,171
還有一些常用的命令，像 ls 、df 也是有一些藏語的支持

157
00:17:29,171 --> 00:17:31,880
但並沒有完全覆蓋完成

158
00:17:35,423 --> 00:17:42,719
然後接下來，可以看一下 UQUI 的默認的文件管理器

159
00:17:42,719 --> 00:17:46,312
然後也是有了初步的一個藏語的支持

160
00:17:46,312 --> 00:17:53,109
包括像一些設置選項的支持，還有視圖的設置支持

161
00:17:55,359 --> 00:17:59,456
然後這裡還有一些像 tag 標記的支持

162
00:18:03,000 --> 00:18:13,840
然後對於像 GTK 應用，像普拉瑪啊什麼的，還有像打印的一個設置

163
00:18:13,840 --> 00:18:18,000
都是進行了一個完全的藏語支持

164
00:18:18,000 --> 00:18:23,075
因為這部分功能是作為日常生活中最為常用的功能

165
00:18:23,075 --> 00:18:28,154
所以我們也是優先進行了一個本地化支持

166
00:18:28,154 --> 00:18:35,499
還有一些像掃雷之類的遊戲，GTK 遊戲也是有一些簡單的藏語支持

167
00:18:37,018 --> 00:18:43,275
然後除此之外的話，我這裡還有就是值得一說的就是

168
00:18:43,275 --> 00:18:48,088
將 PS 完成了一個完成度很高的藏語翻譯支持

169
00:18:48,088 --> 00:18:58,899
基本上是覆蓋了所有的像出去，還有標籤欄的一些選項

170
00:18:58,899 --> 00:19:01,553
就是進行了一個完整的藏語覆蓋

171
00:19:05,546 --> 00:19:08,562
除了這些常用的 GTK 應用之外

172
00:19:08,562 --> 00:19:16,475
我們對整個 UQUI 桌面環境中的應用也做了一個完整的藏語支持

173
00:19:16,475 --> 00:19:25,134
像比如說，我們日常常用的工具，比如說計算器也是有一個初步的藏語支持

174
00:19:25,134 --> 00:19:31,688
還有搜索，同樣的還有視頻播放軟件

175
00:19:33,400 --> 00:19:41,545
視頻播放軟件也是有一些播放控制上的藏語的本地化支持

176
00:19:47,731 --> 00:19:51,470
這裡的話，翻譯的完成度還是比較高的

177
00:19:53,410 --> 00:20:04,057
還有就是像我們日常，還有就是優麒麟提供的一個硬件硬體的檢查的一個工具

178
00:20:04,057 --> 00:20:06,748
是一個清理助手

179
00:20:06,748 --> 00:20:12,381
我們對他的一些硬件標示信息也進行了大量的翻譯工作

180
00:20:21,100 --> 00:20:26,929
然後，這裡還有值得一說的就是

181
00:20:26,929 --> 00:20:32,587
我們跟搜狗公司合作的一個藏語輸入法的支持

182
00:20:32,587 --> 00:20:38,523
然後也是填補了輸入模式上的藏語支持的一個空白

183
00:20:38,523 --> 00:20:51,385
然後主要像包括音節的自動聯想，還有就是單詞的一個快速的拼寫，這樣的支持

184
00:20:51,385 --> 00:20:57,853
這裡的話，十分感謝搜狗公司對於優麒麟藏語本地化的一個推進工作的支持

185
00:21:01,222 --> 00:21:10,609
然後關於關於優麒麟 20.04 上的一個藏語的翻譯支持程度的演示 demo 大概到這裡就結束了

186
00:21:10,609 --> 00:21:20,562
我們接下來的話，回到我們的.....

187
00:21:20,562 --> 00:21:24,623
接下來的話，我為大家介紹一下我們後續的一個計劃

188
00:21:24,623 --> 00:21:29,585
就是儘管我們在 ubuntu 的藏語本地化上來說，已經有了一個比較好的開始

189
00:21:29,585 --> 00:21:32,663
但是我們後續需要去做的工作還是有很多的

190
00:21:32,663 --> 00:21:43,594
我們計劃進一步翻譯整個 ubuntu 中的詞條的翻譯

191
00:21:43,594 --> 00:21:47,662
然後去為更多的沒有翻譯的東西，去添加翻譯

192
00:21:47,662 --> 00:21:55,300
然後第二部分的話，是推進整個項目的完全和純粹的開源

193
00:21:55,300 --> 00:22:04,442
因為目前的話我們可以看到，在 git 倉庫中使用的協議的話還是一個專有的協議

194
00:22:04,442 --> 00:22:10,165
因為我們並沒有取得所有參與翻譯人員的一個授權許可

195
00:22:10,165 --> 00:22:19,478
所以我們也在逐漸推進所有的翻譯人員去確認他們的翻譯狀況的授權

196
00:22:22,278 --> 00:22:27,090
然後這個部分的話，就是我們想要去推進這個項目的開源

197
00:22:27,090 --> 00:22:34,187
然後更進一步的話就是為其他的一些少數民族語言去提供本地化支持

198
00:22:34,187 --> 00:22:43,772
像我們計劃中的話是有維吾爾語、內蒙古語、韓語和藏語的一個少數民族語言本地化支持

199
00:22:49,171 --> 00:22:55,722
然後，最後的話，感謝大家的觀看

200
00:22:56,900 --> 00:23:08,200
在最後，我想再次感謝尼瑪扎希教授、仁增多杰教授、索南尖措教授還有加央甲先生、和三排才讓先生

201
00:23:08,200 --> 00:23:12,900
他們極大的幫助到我們的藏語的本地化工作

202
00:23:14,137 --> 00:23:15,539
謝謝大家！

